#!/bin/sh

# Needs to remove fll-xdm from fll-live-initscripts

PATH=/sbin:/usr/sbin:/bin:/usr/bin

if [ -r /etc/default/distro ]; then
	. /etc/default/distro
fi

###
# debian's default-display-manager control file
###
DEFAULT_DISPLAY_MANAGER_FILE=/etc/X11/default-display-manager

say() {
	echo "I: $@..."
}

setup_kdm() {
	# wallpaper
	echo "USEBACKGROUND=true"		>  /etc/default/kdm.d/wallpaper
	echo "WALLPAPER=${FLL_WALLPAPER}"	>> /etc/default/kdm.d/wallpaper
	# autologin
	echo "AUTOLOGINUSER=${FLL_LIVE_USER}"	>  /etc/default/kdm.d/autologin
	echo "AUTOLOGINAGAIN=true"		>> /etc/default/kdm.d/autologin
	echo "AUTOLOGINDELAY=0"			>> /etc/default/kdm.d/autologin

	if [ "${CUSTOM_DPI}" ]; then
		sed -i	-e "s/\(^ServerArgsLocal\=.*\)\ \-dpi[ \t]*[0-9]*\(.*$\)/\1\2/" \
			-e "s/\(^ServerArgsLocal\=.*\)\-dpi[ \t]*[0-9]*\(.*$\)/\1\2/" \
			-e "s/\(^ServerArgsLocal\=.*\) *$/\1/" \
			-e "s/^ServerArgsLocal\=.*$/& \-dpi ${CUSTOM_DPI}/" \
				/etc/kde4/kdm/kdmrc
	fi
}

setup_gdm3() {
	# autologin + greeter theme
	# timed login required for login after x restart
	sed -i	-e "/^AutomaticLogin\=.*/d" \
		-e "/^AutomaticLoginEnable\=.*/d" \
		-e "/^TimedLoginEnable\=.*/d" \
		-e "/^TimedLogin\=.*/d" \
		-e "/^TimedLoginDelay\=.*/d" \
		-e "s/^\(\[daemon\]$\)/\1\nAutomaticLogin\=${FLL_LIVE_USER}\nAutomaticLoginEnable\=true\n \
			\nTimedLoginEnable\=true\nTimedLogin\=${FLL_LIVE_USER}\nTimedLoginDelay\=1/" \
			/etc/gdm3/daemon.conf
}

setup_slim() {
	# set autologin for $FLL_LIVE_USER to yes
	sed -i	-e "s/^default_user.*/\#FLL\#&/" \
		-e "s/^\#FLL\#\(default_user[ \t]*${FLL_LIVE_USER}$\)/\1/" \
		-e "s/^auto_login.*/\#FLL\#&/" \
		-e "s/^\#FLL\#\(auto_login[ \t]*yes$\)/\1/" \
			/etc/slim.conf
	grep -q ^default_user /etc/slim.conf || \
		printf "default_user\t${FLL_LIVE_USER}\n" >> /etc/slim.conf
	grep -q ^auto_login /etc/slim.conf || \
		printf "auto_login\tyes\n" >> /etc/slim.conf

	if [ "${CUSTOM_DPI}" ]; then
		sed -i	-e "s/\(^xserver_arguments.*\)\ \-dpi[ \t]*[0-9]*\(.*$\)/\1\2/" \
			-e "s/\(^xserver_arguments.*\)\-dpi[ \t]*[0-9]*\(.*$\)/\1\2/" \
			-e "s/\(^xserver_arguments.*\)/& \-dpi ${CUSTOM_DPI}/" \
				/etc/slim.conf
	fi
}

setup_lightdm() {
	# set autologin user and set timeout to zero
	sed -i  -e "s/^\#autologin-user=/autologin-user=${FLL_LIVE_USER}/" \
		-e "s/^\#autologin-user-timeout=0/autologin-user-timeout=0/" \
			/etc/lightdm/lightdm.conf
	# temporary workaround to enable autologin
#	sed -i -e "s/^autologin-user-timeout=0/autologin-user-timeout=0\npam-service=lightdm-autologin/" \
#		/etc/lightdm/lightdm.conf
	cat > /etc/pam.d/lightdm-autologin << EOF
#%PAM-1.0
auth requisite pam_nologin.so
auth required pam_env.so readenv=1
auth required pam_env.so readenv=1 envfile=/etc/default/locale
auth required pam_succeed_if.so user != root quiet_success
auth required pam_permit.so
@include common-account
session required pam_limits.so
@include common-session
@include common-password
EOF
}

setup_x_cursor_theme() {
	if [ -e /usr/share/icons/DMZ-Black/cursor.theme ]; then
		update-alternatives --set x-cursor-theme /usr/share/icons/DMZ-Black/cursor.theme >/dev/null
	fi
}

case "${1}" in
	postinst)

		SLIM="$(which slim 2>/dev/null)"
		if [ "${SLIM}" ]; then
			say 'configuring slim'
			setup_slim && echo "${SLIM}" > "${DEFAULT_DISPLAY_MANAGER_FILE}"
		fi

		GDM3="$(which gdm3 2>/dev/null)"
		if [ "${GDM3}" ]; then
			say 'configuring gdm3'
			setup_gdm3 && echo "${GDM3}" > "${DEFAULT_DISPLAY_MANAGER_FILE}"
			#fix the init 3 issue
			ldmini=`fgrep retry /etc/init.d/gdm3`
			if [ "${ldmini}" ] ; then
				sed -i "s@${ldmini}@${ldmini}\n\tchvt 1@" /etc/init.d/gdm3
			fi
		fi

		LIGHTDM="$(which lightdm 2>/dev/null)"
		if [ "${LIGHTDM}" ]; then
			say 'configuring lightdm'
			setup_lightdm && echo "${LIGHTDM}" > "${DEFAULT_DISPLAY_MANAGER_FILE}"
			#fix the init3 issue
			ldmini=`fgrep retry /etc/init.d/lightdm`
			if [ "${ldmini}" ] ; then
				sed -i "s@${ldmini}@${ldmini}\n\tchvt 1@" /etc/init.d/lightdm
			fi
		fi

		# Handle kdm last, making it the default display manager
		# ...unless overriden below
		KDM="$(which kdm 2>/dev/null)"
		if [ "${KDM}" ]; then
			say 'configuring kdm'
			setup_kdm && echo "${KDM}" > "${DEFAULT_DISPLAY_MANAGER_FILE}"
		fi

		# Four desktop-managers installed, override default display manager
		# based on desktop choice cheatcode
		case "${DESKTOP}" in
			kde)
				if [ -n "${KDM}" ]; then
					if [ -n "${GDM3}" ] || [ -n "${SLIM}" ] || [ -n "${LIGHTDM}" ]; then
						echo "${KDM}" > "${DEFAULT_DISPLAY_MANAGER_FILE}"
					fi
				fi
				;;
			gnome)
				if [ -n "${GDM3}" ]; then
					if [ -n "${KDM}" ] || [ -n "${SLIM}" ] || [ -n "${LIGHTDM}" ]; then
						echo "${GDM3}" > "${DEFAULT_DISPLAY_MANAGER_FILE}"
					fi
				fi
				;;
			xfce*|lxde|razorqt)
				if [ -n "${LIGHTDM}" ]; then
					if [ -n "${KDM}" ] || [ -n "${GDM3}" ] || [ -n "${SLIM}" ]; then
						echo "${LIGHTDM}" > "${DEFAULT_DISPLAY_MANAGER_FILE}"
					fi
				fi
				;;
		esac

		setup_x_cursor_theme
		;;
		*)
		echo "Error: argument '${1}' not supported" >&2
		exit 3
		;;
esac
