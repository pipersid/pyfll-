export loaded
export disable_gfxterm
export bootarch
export firmware
export firmware_found
export from
export fromiso
export bootlang
export keyboard
export timezone
export hwclock
export def_bootlang
export def_keyboard
export def_timezone
export menu_color_normal
export menu_color_highlight
export pager=1

function menu_reload {
  configfile ${prefix}/grub.cfg
}

function is_efi {
  if [ "${grub_platform}" = "efi" ]; then
    if [ "${grub_cpu}" = "i386" ]; then
        bootarch="i386-efi"
    fi
    return 0
  fi
  return 1
}

function efi_detect {
  if is_efi ; then
    submenu "Detect EFI bootloaders" {
      efi_found=false

      for efi in (*,gpt*)/efi/*/*.efi (*,gpt*)/efi/*/*/*.efi (*,gpt*)/*.efi (*,gpt*)/*/*.efi ; do
        regexp --set=1:efi_device '^\((.*)\)/' "${efi}"
        if [ -e "${efi}" ]; then
          efi_found=true

          menuentry "${efi}" "${efi_device}" {
            root="${2}"
            chainloader "${1}"
          }
        fi
      done

      if [ "${efi_found}" != true ]; then
        menuentry "No EFI files detected." {
          menu_reload
        }
      else
        menuentry "Cancel" {
          menu_reload
        }
      fi
    }
  fi
}

function firmware_detect {
    firmware_found=false
    firmware=""
    if [ -z "${imagedir}" ]; then
        imagedir="fullstory"
    fi
    for d in (*); do
        testedf="${testedf} $d"
        if [ -d $d/$imagedir/firmware ]; then
            firmware_found=true
            firmware="firmware"
            break
        fi
    done
}

function firmware_menu {
    if [ "${firmware_found}" = "true" ]; then
        if [ -z "${firmware}" ]; then
            menuentry "Load firmware" {
                firmware="firmware"
                menu_reload
            }
        else
            menuentry "Do NOT Load firmware" {
                firmware=""
                menu_reload
            }
        fi
    fi
}

function lang_setup {
  source ${prefix}/locales/${1}
  menu_reload
}

function lang_menu {
  menuentry "lang=${ll}" "${ll}" {
    lang_setup "${2}"
  }
}

function locale_menu {
  submenu "lang=${def_bootlang}" {
    default=0
    menuentry "lang=${def_bootlang}" {
      menu_reload
    }
    menuentry "Čeština" {
      lang_setup "cs_CZ"
    }
    menuentry "Dansk" {
      lang_setup "da_DK"
    }
    submenu "Deutsch" {
      for ll in de_DE de_AT de_BE de_CH de_LI de_LU; do
        lang_menu ${ll}
      done
    }
    submenu "Ελληνικά" {
      for ll in el_GR el_CY; do
        lang_menu ${ll}
      done
    }
    submenu "English" {
      for ll in en_US en_AG en_AU en_BW en_CA en_DK en_GB en_HK en_IE en_IN en_NG en_NZ en_PH en_SG en_ZA en_ZW; do
        lang_menu ${ll}
      done
    }
    submenu "Español" {
      for ll in es_ES es_AR es_BO es_CL es_CO es_CR es_DO es_EC es_GT es_HN es_MX es_NI es_PA es_PE es_PR es_PY es_SV es_US es_UY es_VE; do
        lang_menu ${ll}
      done
    }
    submenu "Français" {
      for ll in fr_FR fr_BE fr_CA fr_CH fr_LU fr_NC; do
        lang_menu ${ll}
      done
    }
    submenu "Italiano" {
      for ll in it_IT it_CH; do
        lang_menu ${ll}
      done
    }
    menuentry "日本語" {
      lang_setup "ja_JP"
    }
    submenu "Nederlands" {
      for ll in nl_NL nl_AW nl_BE; do
        lang_menu ${ll}
      done
    }
    menuentry "Polski" {
      lang_setup "pl_PL"
    }
    submenu "Português" {
      for ll in pt_BR pt_PT; do
        lang_menu ${ll}
      done
    }
    menuentry "Română" {
      lang_setup "ro_RO"
    }
    submenu "Русский" {
      for ll in ru_RU ru_UA;do
        lang_menu ${ll}
      done
    }
  }
  submenu "keyboard=${def_keyboard}" {
    default=0
    menuentry "Cancel (${def_keyboard})" {
      menu_reload
    }
    source ${prefix}/locales/keyboards
  }
  submenu "tz=${def_timezone}" {
    default=0
    menuentry "Cancel (${def_timezone})" {
      menu_reload
    }
    for tt in Africa America Asia Atlantic Australia Etc Europe Pacific; do
      submenu "${tt}" {
        source "${prefix}/tz/${1}"
      }
    done
  }
  if [ "${timezone}${bootlang}" != "" ]; then
    default=4
    if [ "${hwclock}" = "utc" ]; then
      menuentry "hwclock is utc" {
        hwclock=""
        menu_reload
      }
    else
      menuentry "hwclock is localtime" {
        hwclock="utc"
        menu_reload
      }
    fi
  else
    default=3
  fi
}

function locale_defaults {
  if [ -z "${def_bootlang}" ]; then
    def_bootlang="en_US"
    def_keyboard="us"
    def_timezone="UTC"
  fi
}

insmod regexp
if ! is_efi ; then
  insmod part_gpt
fi

if [ -z "${loaded}" ]; then
    source ${prefix}/variable.cfg
    firmware_detect
    loaded=true
fi

timeout=30

if keystatus --shift; then
  disable_gfxterm=true
fi

if [ "${disable_gfxterm}" != "true" ]; then
  insmod all_video
  if loadfont ${prefix}/unicode.pf2 ; then
    gfxmode=640x480
    insmod gfxterm
    if ! is_efi; then
      insmod vbe
    fi
    if terminal_output --append gfxterm; then
      terminal_output --remove console
    else
      disable_gfxterm=true
    fi
  else
    disable_gfxterm=true
  fi
fi

menu_color_normal=cyan/blue
menu_color_highlight=white/blue

if [ -n "${iso_path}" ]; then 
  fromiso="fromiso=${iso_path}"
fi

for kopt in "${from}" "${fromiso}" "${bootlang}" "${keyboard}" "${timezone}" "${hwclock}" "${firmware}" "${bootarch}"; do
  if [ -n "${kopt}" ]; then
    kopts="${kopts} ${kopt}"
  fi
done

locale_defaults

locale_menu
source ${prefix}/kernels.cfg
firmware_menu
efi_detect
